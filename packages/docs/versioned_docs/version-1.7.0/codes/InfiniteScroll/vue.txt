<template>
<div class="examples">
  <div class="buttons">
    <button class="prev" :disabled="isReachStart" @click="prev">prev</button>
    <button class="next" :disabled="isReachEnd" @click="next">next</button>
  </div>
  <masonry-infinite-grid
    class="items"
    v-bind:gap="5"
    ref="ig"
    v-on:request-append="onRequestAppend"
  >
    <div
      class="item"
      v-for="item in items"
      :key="item.key"
      :data-grid-groupkey="item.groupKey"
    >{item.key}</div>
  </masonry-infinite-grid>
</div>
</template>
<script lang="ts">
import { MasonryInfiniteGrid } from "@egjs/vue3-infinitegrid";
import { useConveyer } from "@egjs/vue-conveyer";

export default {
  components: {
    MasonryInfiniteGrid,
  },
  setup() {
    const { ref, scrollIntoView, isReachStart, isReachEnd, updateContainersetItems, init } = useConveyer({
      horizontal: false,
    });

    return {
      ref,
      scrollIntoView,
      isReachStart,
      isReachEnd,
      updateContainer,
      setItems,
      init,
    };
  },
  data() {
    return {
      items: this.getItems(0, 10),
    };
  },
  mounted() {
    this.ref.value = this.ig.getScrollContainerElement();
    this.init();
  }
  methods: {
    getItems(nextGroupKey: nextGroupKey, count: number) {
      const nextItems: any[] = [];

      for (let i = 0; i < count; ++i) {
        const nextKey = nextGroupKey * count + i;

        nextItems.push({ groupKey: groupKey, key: nextKey });
      }
      return nextItems;
    },
    onRequestAppend(e) {
      const nextGroupKey = (+e.groupKey! || 0) + 1;

      this.items = [...this.items, ...this.getItems(nextGroupKey, 10)];
    },
    onRenderComplete(e) {
      this.setItems(e.currentTarget.getItems().map((item) => ({
        element: item.element,
        pos: item.computedContentPos,
        size: item.contentSize,
      })));
      this.updateContainer();
    },
    prev() {
      this.scrollIntoView("start", {
        align: "end",
        duration: 500,
        excludeStand: true,
      });
    },
    next() {
      this.scrollIntoView("end", {
        align: "start",
        duration: 500,
        excludeStand: true,
      });
    },
  },
};
</script>
